<?xml version="1.0" encoding="UTF-8" ?>
       <!-- scan:
        当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
        scanPeriod:
        设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
        debug:
        当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="false" scanPeriod="60 seconds" debug="false" >
    <property name="APP_NAME" value="fly_test"/>
    <property name="file_path" value="/data/logs/flytest"/>
    <!-- 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </layout>

    </appender>
    <!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份)-->

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <file>${file_path}/${APP_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${file_path}/%d{yyyy-MM-dd}/${APP_NAME}.log.zip</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} -%msg%n</pattern>
        </encoder>
    </appender>
    <root level="INFO">
        <appender-ref ref="STDOUT" />
    </root>
    <!-- logback为java中的包 -->
    <logger name="flytest.logback"/>
    <!--logback.LogbackDemo：类的全路径 -->
    <logger name="flytest.logback.LogbackMain" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
    </logger>
</configuration>